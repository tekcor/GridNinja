Texture2D tex0: PREVIOUS;
Texture2D tex1 <string uiname="Texture In 2";>;
SamplerState s0 <bool visible=false;string uiname="Sampler";> {Filter=MIN_MAG_MIP_LINEAR;AddressU=WRAP;AddressV=WRAP;};

float2 R:TARGETSIZE;

cbuffer controls:register(b0){
	float4 ColorA <bool color=true; string uiname="Background Color";>;
	float Brightness = 2.5;
	float Scale <float uimin = 0.0; float uimax = 1.0;> = 0.25;
};

float4 pHatchFromTexture(float4 PosWVP:SV_POSITION,float2 uv:TEXCOORD0):SV_Target
{	
	float2 x=uv*R-0.5;
	
	float4 col = tex0.SampleLevel(s0, uv, 0) ;
	
    float  c =dot(col, 0.33);
	
	c *= Brightness;
	
	float3 col2 = tex1.SampleLevel(s0, x * (Scale/2.0), 0).rgb;
	
	float g0 = 0;
	float g1 = 0;
	float f  = 0;
	
	if( c >= 0.666)
	{
		f =(c - 0.666) / 0.333;
		g1 = 0;
		g0 = col2.r;
	}
	else if( c >= 0.333)
	{
		f =(c - 0.333) / 0.333;
		g1 = col2.r;
		g0 = col2.g;
	}
	else{
		f = c / 0.333;
		g1= col2.g;
		g0= col2.b;
	}
	
	float g = g0 + f *(g1 - g0);
	
	g = 1 - g;
  
    col = float4( g ,g ,g ,col.a )* ColorA;
	
    return col;
}

technique10 HatchFromTexture{
	pass P0
	{SetPixelShader(CompileShader(ps_4_0,pHatchFromTexture()));}
}
