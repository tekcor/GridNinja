Texture2D tex0: PREVIOUS;
SamplerState s0 <bool visible=false;string uiname="Sampler";> {Filter=MIN_MAG_MIP_LINEAR;AddressU=CLAMP;AddressV=CLAMP;};

float2 R:TARGETSIZE;

cbuffer controls:register(b0){
	float4 ColorA <bool color=true;> =float4(0.0,0.0,0.0,1);
	float4 ColorB <bool color=true;> =float4(0.5,0.5,0.5,1);
	float4 ColorC <bool color=true;> =float4(1.0,1.0,1.0,1);

	float Smooth <float uimin=0.0;float uimax=1.0;> =0.5;
	float Center <float uimin=0.0;float uimax=1.0;> =0.5;
	//float Width <float uimin=0.0;float uimax=1.0;> =0.5;

	bool SingleChannel=1;
	bool ClampColor=1;

};

#define linstep(a,b,x) (saturate((x-a)/(b-a)))
#define linstepf(a,b,x) (((x-a)/(b-a)))
float4 pTRICOLOR(float4 PosWVP:SV_POSITION,float2 x:TEXCOORD0):SV_Target{
	float4 c=tex0.SampleLevel(s0,x,0);

	float4 fd=c;

	if(SingleChannel)fd=dot(c.rgb,1./3.);
	fd=lerp(fd,sign(fd)*pow(abs(fd),Center/(1.000001-Center)),1-.5*saturate(Smooth*2-1));
	//fd=sign(fd-.5)*pow(abs(fd-.5)*2,(Width/(1.000001-Width)))/2.+.5;
	
	float Smooth2=saturate(Smooth*2)/2.;
	Smooth2=saturate(Smooth);
	
	float sm=(1-Smooth2)/(.000001+Smooth2);

	float4 fd1=max(0,1-linstepf(0,1,(fd*2-.6666)*sm+.6666));
	float4 fd2=max(0,linstepf(0,1,(fd*2-1-.3333)*sm+.3333));

	
	if(ClampColor){fd1=saturate(fd1);fd2=saturate(fd2);}

	c=ColorB;
	c=lerp(c,ColorA,fd1);
	c=lerp(c,ColorC,fd2);

	return c;
}


technique10 _TriColor{
	pass P1
	{SetPixelShader(CompileShader(ps_4_0,pTRICOLOR()));}
}


