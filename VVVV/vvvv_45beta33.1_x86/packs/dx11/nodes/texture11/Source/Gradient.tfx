float2 R:TARGETSIZE;

cbuffer controls:register(b0){

	float4x4 tTex <string uiname="Transform";>;
	float4 Color1 <bool color=true;> =float4(0,0,0,1);
	float4 Color2 <bool color=true;> =1;
	float Gamma=1;
	bool ClipColor=0;
};

float4 pLINEAR(float4 PosWVP:SV_POSITION,float2 x:TEXCOORD0):SV_TARGET{
	float4 c=0;
	float2 x0=mul(float4((x.xy*2-1)*float2(1,-1),0,1),tTex).xy*0.5*float2(1,-1)+0.5;
	float fade=x0.x;
	fade=sign(fade)*pow(abs(fade),Gamma);
	if(ClipColor)fade=saturate(fade);
	c=lerp(Color1,Color2,fade);
    return c;
}
float4 pRADIAL(float4 PosWVP:SV_POSITION,float2 x:TEXCOORD0):SV_TARGET{
	float4 c=0;
	float2 x0=mul(float4((x.xy*2-1)*float2(1,-1),0,1),tTex).xy*0.5*float2(1,-1)+0.5;
	float fade=length(x0.xy-.5)*2;
	fade=sign(fade)*pow(abs(fade),Gamma);
	if(ClipColor)fade=saturate(fade);
	c=lerp(Color1,Color2,fade);
    return c;
}
technique10 Linear{pass P1{SetPixelShader(CompileShader(ps_4_0,pLINEAR()));}}
technique10 Radial{pass P1{SetPixelShader(CompileShader(ps_4_0,pRADIAL()));}}



